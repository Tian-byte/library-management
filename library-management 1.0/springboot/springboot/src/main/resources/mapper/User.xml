<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.UserMapper">

    <insert id="save">
        insert  into  `library-management`.user(name,username,age,sex,phone, address,account)
        values (#{name}, #{username},#{age},#{sex},#{phone},#{address},#{account})
        </insert>
    <update id="updateById">
        update `library-management`.user set name = #{name}, age=#{age},sex= #{sex}, phone =#{phone},address = #{address},status = #{status},
             account = #{account}, updatetime = #{updatetime}
        where id = #{id}
    </update>
    <delete id="deleteById">
           delete  from `library-management`.user where id = #{id}
    </delete>

    <select id="list" resultType="com.example.springboot.entity.User">
        select * from `library-management`.user
    </select>
    <select id="listByCondition" resultType="com.example.springboot.entity.User">
        select * from `library-management`.user
            <where>
                <if test="name != null  " >
                    name like concat('%' ,  #{name}, '%')
                </if>
                 <if test="phone != null  ">
                    and     phone like concat('%',#{phone},'%')
                 </if>
            </where>
        order by  id desc
    </select>
    <select id="getById" resultType="com.example.springboot.entity.User">
        select * from `library-management`.user
        where id = #{id}
    </select>
    <select id="getByUserName" resultType="com.example.springboot.entity.User">
        select * from  `library-management`.user where username = #{username}
    </select>
</mapper>